AST:
[AST({'filters': [AST({'var': 'a', 'value': 'b'}), AST({'var': 'c', 'value': 'd'}), AST({'var': 'e', 'value': 'r"wo oo"'}), AST({'var': 'c', 'value': '*wow'})], 'vars': [AST({'assign': 'k', 'value': '2'})]}), AST({'assign': 'a', 'value': '1'}), AST({'assign': 'b', 'value': '2'}), AST({'vars': [AST({'assign': 'c', 'value': '3'}), AST({'assign': 'e', 'value': '10'})], 'rule': 'kkkk'}), AST({'assign': 'd', 'value': '4'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['*.exe'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['*.c'], 'build': 'auto'}), AST({'assign': 'ninja_required_version', 'value': '1.3'}), AST({'assign': 'configure_args', 'value': ''}), AST({'assign': 'sourcedir', 'value': 'C:\\work\\ninja'}), AST({'assign': 'builddir', 'value': 'build'}), AST({'assign': 'cxx', 'value': 'cl'}), AST({'assign': 'ar', 'value': 'link'}), AST({'assign': 'cflags', 'value': '/nologo /Zi /W4 /WX /wd4530 /wd4100 /wd4706 /wd4512 /wd4800 $\n    /wd4702 /wd4819 /wd4355 /wd4091 /GR- /wd4267 /DNOMINMAX $\n    /D_CRT_SECURE_NO_WARNINGS /DNINJA_PYTHON="python.exe" /FS /Ox /DNDEBUG $\n    /GL -I.'}), AST({'assign': 'ldflags', 'value': '/DEBUG /libpath:$builddir /LTCG /OPT:REF /OPT:ICF'}), AST({'vars': [AST({'assign': 'command', 'value': '$cxx $cflags -c $in /Fo$out'}), AST({'assign': 'description', 'value': 'CXX $out'}), AST({'assign': 'deps', 'value': 'msvc'})], 'rule': 'cxx'}), AST({'vars': [AST({'assign': 'command', 'value': 'lib /nologo /ltcg /out:$out $in'}), AST({'assign': 'description', 'value': 'LIB $out'})], 'rule': 'ar'}), AST({'vars': [AST({'assign': 'command', 'value': '$cxx $in $libs /nologo /link $ldflags /out:$out'}), AST({'assign': 'description', 'value': 'LINK $out'})], 'rule': 'link'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\build.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\build.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\build_log.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\build_log.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\clean.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\clean.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\debug_flags.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\debug_flags.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\depfile_parser.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\depfile_parser.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\deps_log.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\deps_log.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\disk_interface.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\disk_interface.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\edit_distance.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\edit_distance.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\eval_env.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\eval_env.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\graph.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\graph.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\graphviz.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\graphviz.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\lexer.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\lexer.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\line_printer.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\line_printer.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\manifest_parser.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\manifest_parser.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\metrics.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\metrics.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\state.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\state.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\util.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\util.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\version.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\version.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\subprocess-win32.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\subprocess-win32.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\includes_normalize-win32.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$\n', '$sourcedir\\src\\includes_normalize-win32.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\msvc_helper-win32.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\msvc_helper-win32.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\msvc_helper_main-win32.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$\n', '$sourcedir\\src\\msvc_helper_main-win32.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\minidump-win32.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\minidump-win32.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\getopt.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\getopt.c'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\ninja.lib'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$builddir\\build.obj', '$builddir\\build_log.obj', '$\n', '$builddir\\clean.obj', '$builddir\\debug_flags.obj', '$\n', '$builddir\\depfile_parser.obj', '$builddir\\deps_log.obj', '$\n', '$builddir\\disk_interface.obj', '$builddir\\edit_distance.obj', '$\n', '$builddir\\eval_env.obj', '$builddir\\graph.obj', '$builddir\\graphviz.obj', '$\n', '$builddir\\lexer.obj', '$builddir\\line_printer.obj', '$\n', '$builddir\\manifest_parser.obj', '$builddir\\metrics.obj', '$builddir\\state.obj', '$\n', '$builddir\\util.obj', '$builddir\\version.obj', '$builddir\\subprocess-win32.obj', '$\n', '$builddir\\includes_normalize-win32.obj', '$builddir\\msvc_helper-win32.obj', '$\n', '$builddir\\msvc_helper_main-win32.obj', '$builddir\\minidump-win32.obj', '$\n', '$builddir\\getopt.obj'], 'build': 'ar'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\ninja.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\ninja.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': ['$builddir\\ninja.lib'], 'targets_explicit': ['ninja.exe'], 'vars': [AST({'assign': 'libs', 'value': 'ninja.lib'})], 'inputs_order': None, 'inputs_explicit': ['$builddir\\ninja.obj'], 'build': 'link'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\build_log_test.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\build_log_test.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\build_test.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\build_test.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\clean_test.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\clean_test.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\depfile_parser_test.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$\n', '$sourcedir\\src\\depfile_parser_test.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\deps_log_test.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\deps_log_test.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\disk_interface_test.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$\n', '$sourcedir\\src\\disk_interface_test.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\edit_distance_test.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$\n', '$sourcedir\\src\\edit_distance_test.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\graph_test.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\graph_test.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\lexer_test.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\lexer_test.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\manifest_parser_test.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$\n', '$sourcedir\\src\\manifest_parser_test.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\ninja_test.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\ninja_test.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\state_test.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\state_test.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\subprocess_test.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\subprocess_test.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\test.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\test.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\util_test.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\util_test.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\includes_normalize_test.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$\n', '$sourcedir\\src\\includes_normalize_test.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\msvc_helper_test.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\msvc_helper_test.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['ninja_test'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['ninja_test.exe'], 'build': 'phony'}), AST({'targets_implicit': None, 'inputs_implicit': ['$\n', '$builddir\\ninja.lib'], 'targets_explicit': ['ninja_test.exe'], 'vars': [AST({'assign': 'libs', 'value': 'ninja.lib'})], 'inputs_order': None, 'inputs_explicit': ['$builddir\\build_log_test.obj', '$\n', '$builddir\\build_test.obj', '$builddir\\clean_test.obj', '$\n', '$builddir\\depfile_parser_test.obj', '$builddir\\deps_log_test.obj', '$\n', '$builddir\\disk_interface_test.obj', '$builddir\\edit_distance_test.obj', '$\n', '$builddir\\graph_test.obj', '$builddir\\lexer_test.obj', '$\n', '$builddir\\manifest_parser_test.obj', '$builddir\\ninja_test.obj', '$\n', '$builddir\\state_test.obj', '$builddir\\subprocess_test.obj', '$\n', '$builddir\\test.obj', '$builddir\\util_test.obj', '$\n', '$builddir\\includes_normalize_test.obj', '$builddir\\msvc_helper_test.obj'], 'build': 'link'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\build_log_perftest.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$\n', '$sourcedir\\src\\build_log_perftest.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['build_log_perftest'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['build_log_perftest.exe'], 'build': 'phony'}), AST({'targets_implicit': None, 'inputs_implicit': ['$\n', '$builddir\\ninja.lib'], 'targets_explicit': ['build_log_perftest.exe'], 'vars': [AST({'assign': 'libs', 'value': 'ninja.lib'})], 'inputs_order': None, 'inputs_explicit': ['$builddir\\build_log_perftest.obj'], 'build': 'link'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\canon_perftest.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\src\\canon_perftest.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['canon_perftest'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['canon_perftest.exe'], 'build': 'phony'}), AST({'targets_implicit': None, 'inputs_implicit': ['$\n', '$builddir\\ninja.lib'], 'targets_explicit': ['canon_perftest.exe'], 'vars': [AST({'assign': 'libs', 'value': 'ninja.lib'})], 'inputs_order': None, 'inputs_explicit': ['$builddir\\canon_perftest.obj'], 'build': 'link'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\depfile_parser_perftest.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$\n', '$sourcedir\\src\\depfile_parser_perftest.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['depfile_parser_perftest'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['depfile_parser_perftest.exe'], 'build': 'phony'}), AST({'targets_implicit': None, 'inputs_implicit': ['$builddir\\ninja.lib'], 'targets_explicit': ['depfile_parser_perftest.exe'], 'vars': [AST({'assign': 'libs', 'value': 'ninja.lib'})], 'inputs_order': None, 'inputs_explicit': ['$\n', '$builddir\\depfile_parser_perftest.obj'], 'build': 'link'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\hash_collision_bench.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$\n', '$sourcedir\\src\\hash_collision_bench.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['hash_collision_bench'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['hash_collision_bench.exe'], 'build': 'phony'}), AST({'targets_implicit': None, 'inputs_implicit': ['$\n', '$builddir\\ninja.lib'], 'targets_explicit': ['hash_collision_bench.exe'], 'vars': [AST({'assign': 'libs', 'value': 'ninja.lib'})], 'inputs_order': None, 'inputs_explicit': ['$builddir\\hash_collision_bench.obj'], 'build': 'link'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\manifest_parser_perftest.obj'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$\n', '$sourcedir\\src\\manifest_parser_perftest.cc'], 'build': 'cxx'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['manifest_parser_perftest'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['manifest_parser_perftest.exe'], 'build': 'phony'}), AST({'targets_implicit': None, 'inputs_implicit': ['$builddir\\ninja.lib'], 'targets_explicit': ['manifest_parser_perftest.exe'], 'vars': [AST({'assign': 'libs', 'value': 'ninja.lib'})], 'inputs_order': None, 'inputs_explicit': ['$\n', '$builddir\\manifest_parser_perftest.obj'], 'build': 'link'}), AST({'vars': [AST({'assign': 'command', 'value': './ninja -t graph all > $out'})], 'rule': 'gendot'}), AST({'vars': [AST({'assign': 'command', 'value': 'dot -Tpng $in > $out'})], 'rule': 'gengraph'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\graph.dot'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['ninja', 'build.ninja'], 'build': 'gendot'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['graph.png'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$builddir\\graph.dot'], 'build': 'gengraph'}), AST({'vars': [AST({'assign': 'command', 'value': 'asciidoc -b docbook -d book -o $out $in'}), AST({'assign': 'description', 'value': 'ASCIIDOC $out'})], 'rule': 'asciidoc'}), AST({'vars': [AST({'assign': 'command', 'value': 'xsltproc --nonet doc/docbook.xsl $in > $out'}), AST({'assign': 'description', 'value': 'XSLTPROC $out'})], 'rule': 'xsltproc'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['$builddir\\manual.xml'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\doc\\manual.asciidoc'], 'build': 'asciidoc'}), AST({'targets_implicit': None, 'inputs_implicit': ['$\n', '$sourcedir\\doc\\style.css'], 'targets_explicit': ['$sourcedir\\doc\\manual.html'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$builddir\\manual.xml'], 'build': 'xsltproc'}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['manual'], 'vars': [], 'inputs_order': ['$sourcedir\\doc\\manual.html'], 'inputs_explicit': [], 'build': 'phony'}), AST({'vars': [AST({'assign': 'command', 'value': 'doxygen $in'}), AST({'assign': 'description', 'value': 'DOXYGEN $in'})], 'rule': 'doxygen'}), AST({'assign': 'doxygen_mainpage_generator', 'value': '$sourcedir\\src\\gen_doxygen_mainpage.sh'}), AST({'vars': [AST({'assign': 'command', 'value': '$doxygen_mainpage_generator $in > $out'}), AST({'assign': 'description', 'value': 'DOXYGEN_MAINPAGE $out'})], 'rule': 'doxygen_mainpage'}), AST({'targets_implicit': None, 'inputs_implicit': ['$\n', '$doxygen_mainpage_generator'], 'targets_explicit': ['$builddir\\doxygen_mainpage'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['README', 'COPYING'], 'build': 'doxygen_mainpage'}), AST({'targets_implicit': None, 'inputs_implicit': ['$\n', '$builddir\\doxygen_mainpage'], 'targets_explicit': ['doxygen'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['$sourcedir\\doc\\doxygen.config'], 'build': 'doxygen'}), AST({'vars': [AST({'assign': 'command', 'value': '${configure_env}python.exe $sourcedir/configure.py $configure_args'}), AST({'assign': 'generator', 'value': '1'})], 'rule': 'configure'}), AST({'targets_implicit': None, 'inputs_implicit': ['$sourcedir/configure.py', '$\n', '$sourcedir\\misc\\ninja_syntax.py'], 'targets_explicit': ['build.ninja'], 'vars': [], 'inputs_order': None, 'inputs_explicit': [], 'build': 'configure'}), AST({'defaults': ['ninja.exe']}), AST({'targets_implicit': None, 'inputs_implicit': None, 'targets_explicit': ['all'], 'vars': [], 'inputs_order': None, 'inputs_explicit': ['ninja.exe', 'ninja_test.exe', 'build_log_perftest.exe', '$\n', 'canon_perftest.exe', 'depfile_parser_perftest.exe', 'hash_collision_bench.exe', '$\n', 'manifest_parser_perftest.exe'], 'build': 'phony'})]

JSON:
[
  {
    "filters": [
      {
        "var": "a",
        "value": "b"
      },
      {
        "var": "c",
        "value": "d"
      },
      {
        "var": "e",
        "value": "r\"wo oo\""
      },
      {
        "var": "c",
        "value": "*wow"
      }
    ],
    "vars": [
      {
        "assign": "k",
        "value": "2"
      }
    ]
  },
  {
    "assign": "a",
    "value": "1"
  },
  {
    "assign": "b",
    "value": "2"
  },
  {
    "rule": "kkkk",
    "vars": [
      {
        "assign": "c",
        "value": "3"
      },
      {
        "assign": "e",
        "value": "10"
      }
    ]
  },
  {
    "assign": "d",
    "value": "4"
  },
  {
    "targets_explicit": [
      "*.exe"
    ],
    "build": "auto",
    "inputs_explicit": [
      "*.c"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "assign": "ninja_required_version",
    "value": "1.3"
  },
  {
    "assign": "configure_args",
    "value": ""
  },
  {
    "assign": "sourcedir",
    "value": "C:\\work\\ninja"
  },
  {
    "assign": "builddir",
    "value": "build"
  },
  {
    "assign": "cxx",
    "value": "cl"
  },
  {
    "assign": "ar",
    "value": "link"
  },
  {
    "assign": "cflags",
    "value": "/nologo /Zi /W4 /WX /wd4530 /wd4100 /wd4706 /wd4512 /wd4800 $\n    /wd4702 /wd4819 /wd4355 /wd4091 /GR- /wd4267 /DNOMINMAX $\n    /D_CRT_SECURE_NO_WARNINGS /DNINJA_PYTHON=\"python.exe\" /FS /Ox /DNDEBUG $\n    /GL -I."
  },
  {
    "assign": "ldflags",
    "value": "/DEBUG /libpath:$builddir /LTCG /OPT:REF /OPT:ICF"
  },
  {
    "rule": "cxx",
    "vars": [
      {
        "assign": "command",
        "value": "$cxx $cflags -c $in /Fo$out"
      },
      {
        "assign": "description",
        "value": "CXX $out"
      },
      {
        "assign": "deps",
        "value": "msvc"
      }
    ]
  },
  {
    "rule": "ar",
    "vars": [
      {
        "assign": "command",
        "value": "lib /nologo /ltcg /out:$out $in"
      },
      {
        "assign": "description",
        "value": "LIB $out"
      }
    ]
  },
  {
    "rule": "link",
    "vars": [
      {
        "assign": "command",
        "value": "$cxx $in $libs /nologo /link $ldflags /out:$out"
      },
      {
        "assign": "description",
        "value": "LINK $out"
      }
    ]
  },
  {
    "targets_explicit": [
      "$builddir\\build.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\build.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\build_log.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\build_log.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\clean.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\clean.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\debug_flags.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\debug_flags.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\depfile_parser.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\depfile_parser.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\deps_log.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\deps_log.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\disk_interface.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\disk_interface.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\edit_distance.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\edit_distance.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\eval_env.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\eval_env.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\graph.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\graph.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\graphviz.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\graphviz.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\lexer.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\lexer.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\line_printer.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\line_printer.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\manifest_parser.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\manifest_parser.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\metrics.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\metrics.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\state.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\state.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\util.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\util.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\version.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\version.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\subprocess-win32.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\subprocess-win32.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\includes_normalize-win32.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$\n",
      "$sourcedir\\src\\includes_normalize-win32.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\msvc_helper-win32.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\msvc_helper-win32.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\msvc_helper_main-win32.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$\n",
      "$sourcedir\\src\\msvc_helper_main-win32.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\minidump-win32.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\minidump-win32.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\getopt.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\getopt.c"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\ninja.lib"
    ],
    "build": "ar",
    "inputs_explicit": [
      "$builddir\\build.obj",
      "$builddir\\build_log.obj",
      "$\n",
      "$builddir\\clean.obj",
      "$builddir\\debug_flags.obj",
      "$\n",
      "$builddir\\depfile_parser.obj",
      "$builddir\\deps_log.obj",
      "$\n",
      "$builddir\\disk_interface.obj",
      "$builddir\\edit_distance.obj",
      "$\n",
      "$builddir\\eval_env.obj",
      "$builddir\\graph.obj",
      "$builddir\\graphviz.obj",
      "$\n",
      "$builddir\\lexer.obj",
      "$builddir\\line_printer.obj",
      "$\n",
      "$builddir\\manifest_parser.obj",
      "$builddir\\metrics.obj",
      "$builddir\\state.obj",
      "$\n",
      "$builddir\\util.obj",
      "$builddir\\version.obj",
      "$builddir\\subprocess-win32.obj",
      "$\n",
      "$builddir\\includes_normalize-win32.obj",
      "$builddir\\msvc_helper-win32.obj",
      "$\n",
      "$builddir\\msvc_helper_main-win32.obj",
      "$builddir\\minidump-win32.obj",
      "$\n",
      "$builddir\\getopt.obj"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\ninja.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\ninja.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "ninja.exe"
    ],
    "build": "link",
    "inputs_explicit": [
      "$builddir\\ninja.obj"
    ],
    "inputs_implicit": [
      "$builddir\\ninja.lib"
    ],
    "vars": [
      {
        "assign": "libs",
        "value": "ninja.lib"
      }
    ],
    "targets_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\build_log_test.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\build_log_test.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\build_test.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\build_test.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\clean_test.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\clean_test.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\depfile_parser_test.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$\n",
      "$sourcedir\\src\\depfile_parser_test.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\deps_log_test.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\deps_log_test.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\disk_interface_test.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$\n",
      "$sourcedir\\src\\disk_interface_test.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\edit_distance_test.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$\n",
      "$sourcedir\\src\\edit_distance_test.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\graph_test.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\graph_test.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\lexer_test.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\lexer_test.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\manifest_parser_test.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$\n",
      "$sourcedir\\src\\manifest_parser_test.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\ninja_test.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\ninja_test.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\state_test.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\state_test.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\subprocess_test.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\subprocess_test.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\test.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\test.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\util_test.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\util_test.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\includes_normalize_test.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$\n",
      "$sourcedir\\src\\includes_normalize_test.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\msvc_helper_test.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\msvc_helper_test.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "ninja_test"
    ],
    "build": "phony",
    "inputs_explicit": [
      "ninja_test.exe"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "ninja_test.exe"
    ],
    "build": "link",
    "inputs_explicit": [
      "$builddir\\build_log_test.obj",
      "$\n",
      "$builddir\\build_test.obj",
      "$builddir\\clean_test.obj",
      "$\n",
      "$builddir\\depfile_parser_test.obj",
      "$builddir\\deps_log_test.obj",
      "$\n",
      "$builddir\\disk_interface_test.obj",
      "$builddir\\edit_distance_test.obj",
      "$\n",
      "$builddir\\graph_test.obj",
      "$builddir\\lexer_test.obj",
      "$\n",
      "$builddir\\manifest_parser_test.obj",
      "$builddir\\ninja_test.obj",
      "$\n",
      "$builddir\\state_test.obj",
      "$builddir\\subprocess_test.obj",
      "$\n",
      "$builddir\\test.obj",
      "$builddir\\util_test.obj",
      "$\n",
      "$builddir\\includes_normalize_test.obj",
      "$builddir\\msvc_helper_test.obj"
    ],
    "inputs_implicit": [
      "$\n",
      "$builddir\\ninja.lib"
    ],
    "vars": [
      {
        "assign": "libs",
        "value": "ninja.lib"
      }
    ],
    "targets_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\build_log_perftest.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$\n",
      "$sourcedir\\src\\build_log_perftest.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "build_log_perftest"
    ],
    "build": "phony",
    "inputs_explicit": [
      "build_log_perftest.exe"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "build_log_perftest.exe"
    ],
    "build": "link",
    "inputs_explicit": [
      "$builddir\\build_log_perftest.obj"
    ],
    "inputs_implicit": [
      "$\n",
      "$builddir\\ninja.lib"
    ],
    "vars": [
      {
        "assign": "libs",
        "value": "ninja.lib"
      }
    ],
    "targets_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\canon_perftest.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$sourcedir\\src\\canon_perftest.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "canon_perftest"
    ],
    "build": "phony",
    "inputs_explicit": [
      "canon_perftest.exe"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "canon_perftest.exe"
    ],
    "build": "link",
    "inputs_explicit": [
      "$builddir\\canon_perftest.obj"
    ],
    "inputs_implicit": [
      "$\n",
      "$builddir\\ninja.lib"
    ],
    "vars": [
      {
        "assign": "libs",
        "value": "ninja.lib"
      }
    ],
    "targets_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\depfile_parser_perftest.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$\n",
      "$sourcedir\\src\\depfile_parser_perftest.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "depfile_parser_perftest"
    ],
    "build": "phony",
    "inputs_explicit": [
      "depfile_parser_perftest.exe"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "depfile_parser_perftest.exe"
    ],
    "build": "link",
    "inputs_explicit": [
      "$\n",
      "$builddir\\depfile_parser_perftest.obj"
    ],
    "inputs_implicit": [
      "$builddir\\ninja.lib"
    ],
    "vars": [
      {
        "assign": "libs",
        "value": "ninja.lib"
      }
    ],
    "targets_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\hash_collision_bench.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$\n",
      "$sourcedir\\src\\hash_collision_bench.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "hash_collision_bench"
    ],
    "build": "phony",
    "inputs_explicit": [
      "hash_collision_bench.exe"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "hash_collision_bench.exe"
    ],
    "build": "link",
    "inputs_explicit": [
      "$builddir\\hash_collision_bench.obj"
    ],
    "inputs_implicit": [
      "$\n",
      "$builddir\\ninja.lib"
    ],
    "vars": [
      {
        "assign": "libs",
        "value": "ninja.lib"
      }
    ],
    "targets_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$builddir\\manifest_parser_perftest.obj"
    ],
    "build": "cxx",
    "inputs_explicit": [
      "$\n",
      "$sourcedir\\src\\manifest_parser_perftest.cc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "manifest_parser_perftest"
    ],
    "build": "phony",
    "inputs_explicit": [
      "manifest_parser_perftest.exe"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "manifest_parser_perftest.exe"
    ],
    "build": "link",
    "inputs_explicit": [
      "$\n",
      "$builddir\\manifest_parser_perftest.obj"
    ],
    "inputs_implicit": [
      "$builddir\\ninja.lib"
    ],
    "vars": [
      {
        "assign": "libs",
        "value": "ninja.lib"
      }
    ],
    "targets_implicit": null,
    "inputs_order": null
  },
  {
    "rule": "gendot",
    "vars": [
      {
        "assign": "command",
        "value": "./ninja -t graph all > $out"
      }
    ]
  },
  {
    "rule": "gengraph",
    "vars": [
      {
        "assign": "command",
        "value": "dot -Tpng $in > $out"
      }
    ]
  },
  {
    "targets_explicit": [
      "$builddir\\graph.dot"
    ],
    "build": "gendot",
    "inputs_explicit": [
      "ninja",
      "build.ninja"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "graph.png"
    ],
    "build": "gengraph",
    "inputs_explicit": [
      "$builddir\\graph.dot"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "rule": "asciidoc",
    "vars": [
      {
        "assign": "command",
        "value": "asciidoc -b docbook -d book -o $out $in"
      },
      {
        "assign": "description",
        "value": "ASCIIDOC $out"
      }
    ]
  },
  {
    "rule": "xsltproc",
    "vars": [
      {
        "assign": "command",
        "value": "xsltproc --nonet doc/docbook.xsl $in > $out"
      },
      {
        "assign": "description",
        "value": "XSLTPROC $out"
      }
    ]
  },
  {
    "targets_explicit": [
      "$builddir\\manual.xml"
    ],
    "build": "asciidoc",
    "inputs_explicit": [
      "$sourcedir\\doc\\manual.asciidoc"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "$sourcedir\\doc\\manual.html"
    ],
    "build": "xsltproc",
    "inputs_explicit": [
      "$builddir\\manual.xml"
    ],
    "inputs_implicit": [
      "$\n",
      "$sourcedir\\doc\\style.css"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "manual"
    ],
    "build": "phony",
    "inputs_explicit": [],
    "inputs_order": [
      "$sourcedir\\doc\\manual.html"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null
  },
  {
    "rule": "doxygen",
    "vars": [
      {
        "assign": "command",
        "value": "doxygen $in"
      },
      {
        "assign": "description",
        "value": "DOXYGEN $in"
      }
    ]
  },
  {
    "assign": "doxygen_mainpage_generator",
    "value": "$sourcedir\\src\\gen_doxygen_mainpage.sh"
  },
  {
    "rule": "doxygen_mainpage",
    "vars": [
      {
        "assign": "command",
        "value": "$doxygen_mainpage_generator $in > $out"
      },
      {
        "assign": "description",
        "value": "DOXYGEN_MAINPAGE $out"
      }
    ]
  },
  {
    "targets_explicit": [
      "$builddir\\doxygen_mainpage"
    ],
    "build": "doxygen_mainpage",
    "inputs_explicit": [
      "README",
      "COPYING"
    ],
    "inputs_implicit": [
      "$\n",
      "$doxygen_mainpage_generator"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_order": null
  },
  {
    "targets_explicit": [
      "doxygen"
    ],
    "build": "doxygen",
    "inputs_explicit": [
      "$sourcedir\\doc\\doxygen.config"
    ],
    "inputs_implicit": [
      "$\n",
      "$builddir\\doxygen_mainpage"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_order": null
  },
  {
    "rule": "configure",
    "vars": [
      {
        "assign": "command",
        "value": "${configure_env}python.exe $sourcedir/configure.py $configure_args"
      },
      {
        "assign": "generator",
        "value": "1"
      }
    ]
  },
  {
    "targets_explicit": [
      "build.ninja"
    ],
    "build": "configure",
    "inputs_explicit": [],
    "inputs_implicit": [
      "$sourcedir/configure.py",
      "$\n",
      "$sourcedir\\misc\\ninja_syntax.py"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_order": null
  },
  {
    "defaults": [
      "ninja.exe"
    ]
  },
  {
    "targets_explicit": [
      "all"
    ],
    "build": "phony",
    "inputs_explicit": [
      "ninja.exe",
      "ninja_test.exe",
      "build_log_perftest.exe",
      "$\n",
      "canon_perftest.exe",
      "depfile_parser_perftest.exe",
      "hash_collision_bench.exe",
      "$\n",
      "manifest_parser_perftest.exe"
    ],
    "vars": [],
    "targets_implicit": null,
    "inputs_implicit": null,
    "inputs_order": null
  }
]

